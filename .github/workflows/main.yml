name: api-employees-demo

on:
  # Workflow
  push:
    branches:
      # Push events on main/master branch
      - master
# Series of steps
jobs:
  CI:
    # Define the runner used
    runs-on: ubuntu-latest
    steps:
      # Our repo is access it
      - uses: actions/checkout@v2

        # Step 1: Review python
      - name: Set up python
        # Configure the env
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          # Optional the architecture

        # Step 2: Install the venv
      - name: Install the venv
        run: pip3 install virtualenv

        # Step 3: Dependencies
      - name: Virtual Environment
        uses: actions/cache@v2
        id: cache-env
        with:
          path: venv
          # the requirements file for the cache
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: /
            ${{ runner.os }}-venv-

        # Step 4: Build the venv
      - name: Source the venv
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt

        # Step 5: Run our tests
      - name: Running Tests
        # Remember activate the venv
        run: . venv/bin/activate && pytest -vvv

        # Step 6: Create the file of dependencies
      - name: Create dependencies
        run: cd ./venv/lib/python3.7/site-packages zip -r9 ../../../../api.zip

        # Step 6: for the pipelines of aws with s3
      - name: Add api to zip file
        run: cd ./api && zip -g ../api/zip -r .

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip





